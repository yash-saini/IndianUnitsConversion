@page "/WeightConversion"
@using ConversionFrontend.Models
@inject HttpClient Http

<PageTitle>Weight Conversion</PageTitle>

<h3>Weight Conversion</h3>
<div class="form-group">
    <label>Value</label>
    <input type="number" class="form-control" @bind="request.Value" />
</div>
<div class="form-group">
    <label>From Unit</label>
    <select class="form-control" @bind="request.FromUnit">
        @foreach (var unit in units)
        {
            <option value="@unit">@unit</option>
        }
    </select>
</div>
<div class="form-group">
    <label>To Unit</label>
    <select class="form-control" @bind="request.ToUnit">
        @foreach (var unit in units)
        {
            <option value="@unit">@unit</option>
        }
    </select>
</div>
<button class="btn btn-primary mt-2" @onclick="Convert">Convert</button>
@if (response != null)
{
    <div class="alert alert-success mt-3">
        @($"{response.Value} {response.FromUnit} = {response.ConvertedValue:F4} {response.ToUnit}")
    </div>
}
@if (errorMessage != null)
{
    <div class="alert alert-danger mt-3">
        @errorMessage
    </div>
}
@code {
    WeightConversionRequest request = new();
    WeightConversionResponse? response;
    string? errorMessage;
    List<string> units = new();
    protected override async Task OnInitializedAsync()
    {
        try
        {
            units = await Http.GetFromJsonAsync<List<string>>("api/WeightConversion/units") ?? new();
            
            if (units.Count >= 2)
            {
                request.FromUnit = units[0];
                request.ToUnit = units[1];
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Error fetching units: {ex.Message}";
        }
    }
    private async Task Convert()
    {
        errorMessage = null;
        response = null;
        try
        {
            var res = await Http.PostAsJsonAsync("api/WeightConversion/convert", request);
            if (res.IsSuccessStatusCode)
            {
                response = await res.Content.ReadFromJsonAsync<WeightConversionResponse>();
                if (response != null)
                    response.Value = request.Value;
            }
            else
            {
                errorMessage = "Conversion failed. Please check your inputs.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "API not reachable. Make sure it's running.";
        }
    }
}
